  0%|          | 0/2 [00:00<?, ?it/s]/home/mschl/2DSimulator/entities.py:65: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  acc_new = np.array([np.cos(heading) * acc_abs, np.sin(heading) * acc_abs])
/home/mschl/2DSimulator/entities.py:65: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  acc_new = np.array([np.cos(heading) * acc_abs, np.sin(heading) * acc_abs])
/home/mschl/2DSimulator/entities.py:55: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return np.array([z[2],z[3],acc[0],acc[1]])
/home/mschl/2DSimulator/entities.py:55: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  return np.array([z[2],z[3],acc[0],acc[1]])
/home/mschl/2DSimulator/entities.py:61: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  velocity_rframe = np.array([np.cos(heading) * self.speed, np.sin(heading) * self.speed])
/home/mschl/2DSimulator/entities.py:61: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  velocity_rframe = np.array([np.cos(heading) * self.speed, np.sin(heading) * self.speed])
/home/mschl/2DSimulator/entities.py:67: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  z_current = np.array([self.center.x,self.center.y,velocity_rframe[0],velocity_rframe[1]])
/home/mschl/2DSimulator/example_intersection.py:150: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  "acc":np.array(acc_list).T,
/home/mschl/2DSimulator/entities.py:168: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  acc_new = np.array([np.cos(heading) * acc_abs, np.sin(heading) * acc_abs])
/home/mschl/2DSimulator/entities.py:168: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  acc_new = np.array([np.cos(heading) * acc_abs, np.sin(heading) * acc_abs])
/home/mschl/2DSimulator/entities.py:160: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  return np.array([z[2],z[3],acc[0],acc[1]])
/home/mschl/2DSimulator/entities.py:166: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  velocity_rframe = np.array([np.cos(heading) * self.speed, np.sin(heading) * self.speed])
/home/mschl/2DSimulator/entities.py:166: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  velocity_rframe = np.array([np.cos(heading) * self.speed, np.sin(heading) * self.speed])
/home/mschl/2DSimulator/entities.py:169: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  z_current = np.array([self.center.x,self.center.y,velocity_rframe[0],velocity_rframe[1]])
/home/mschl/2DSimulator/entities.py:160: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  return np.array([z[2],z[3],acc[0],acc[1]])
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
 50%|█████     | 1/2 [30:51<30:51, 1851.82s/it]/home/mschl/2DSimulator/example_frontal_collision.py:155: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  "acc":np.array(acc_list).T,
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
Found Failure Scenario
100%|██████████| 2/2 [4:03:24<00:00, 8263.84s/it]100%|██████████| 2/2 [4:03:24<00:00, 7302.04s/it]
Results for  [700]
Mean MSE FC:  0.09431429207324982
Std MSE FC:  0.3152664303779602
Miss Rate FC:  0.0075
stop
